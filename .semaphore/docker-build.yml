# This pipeline runs after semaphore.yml
version: v1.0
name: Docker build
agent:
  machine:
    # Use a machine type with more RAM and CPU power for faster container
    # builds:
    type: e1-standard-4
    os_image: ubuntu1804
blocks:
  - name: Build
    task:
      env_vars:
        # The following environment variables define
        # required values for AWS cli.
        # Adjust the values as required.
        # For info on environment variables, see:
        # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
        - name: AWS_DEFAULT_REGION
          value: us-east-2
        - name: ECR_REGISTRY
          value: 890702391356.dkr.ecr.us-east-2.amazonaws.com/semaphore-demo-ruby-kubernetes
      # Mount a secret which defines AWS_ACCESS_KEY_ID
      # and AWS_SECRET_ACCESS_KEY environment variables.
      # For info on creating secrets, see:
      # https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
      secrets:
        - name: AWS
      jobs:
        - name: Docker build
          commands:
            - checkout
            # Install the most up-to-date AWS cli
            - sudo pip install awscli
            # ecr get-login outputs a login command, so execute that with bash
            - aws ecr get-login --no-include-email | bash
            # Use docker layer caching and reuse unchanged layers to build a new
            # container image faster.
            # To do that, we first need to pull a previous version of container:
            - docker pull "${ECR_REGISTRY}:latest" || true
            # Build a new image based on pulled image, if present.
            # Use $SEMAPHORE_GIT_SHA environment variable to produce a
            # unique image tag.
            # For a list of available environment variables on Semaphore, see:
            # https://docs.semaphoreci.com/article/12-environment-variables
            - docker build --cache-from "${ECR_REGISTRY}:latest" -t "${ECR_REGISTRY}:${SEMAPHORE_WORKFLOW_ID}" .
            - docker images
            # Push a new image to ECR:
            - docker push "${ECR_REGISTRY}:${SEMAPHORE_WORKFLOW_ID}"

# The deployment pipeline is defined to run on manual approval from the UI.
# Semaphore will the time and the name of the person who promotes each
# deployment.
#
# You could, for example, add another promotion to a pipeline that
# automatically deploys to a staging environment from branches named
# after a certain pattern.
# https://docs.semaphoreci.com/article/50-pipeline-yaml#promotions
promotions:
  - name: Deploy to Kubernetes
    pipeline_file: deploy-k8s.yml
